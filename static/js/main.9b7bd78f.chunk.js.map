{"version":3,"sources":["Contacts/ContactsStyledComponent.js","Contacts/Contacts.js","SignupForm/SignupFormStyledComponent.js","SignupForm/SignupForm.js","Filter/FilterStyledComponents.js","Filter/Filter.js","App.js","index.js"],"names":["List","styled","ul","ListItem","li","Contacts","this","props","contacts","onDeleteContact","map","id","name","number","type","onClick","Component","Form","form","FormLabel","label","FormInput","input","border","FormButton","button","Text","p","color","numberRegex","RegExp","validationSchema","yup","min","max","required","matches","SignupForm","initialValues","onSubmit","values","resetForm","onAddContact","uuidv4","render","errors","handleChange","handleSubmit","value","onChange","placeholder","FilterLabel","Filter","onChangeFilter","e","target","App","state","filter","addContact","contact","setState","prevState","some","el","alert","handleButtonDelete","contactId","handleFilter","getVisibleContacts","toLowerCase","includes","visibleContacts","className","length","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b7bd78f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { List, ListItem } from './ContactsStyledComponent';\r\n\r\nexport default class Contacts extends Component {\r\n    static propTypes = {\r\n      onDeleteContact: PropTypes.func.isRequired,\r\n      contacts: PropTypes.arrayOf(PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }))\r\n    };\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n    return (\r\n        <List>\r\n          {contacts.map(({ id, name, number }) => {\r\n            return (\r\n              <ListItem key={id}>\r\n                <span>{name}:</span>\r\n                <span>{number}</span>\r\n                <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                  Delete\r\n                </button>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  width: 200px;\r\n  font-size: 13px;\r\n  padding: 6px 0 4px 10px;\r\n  border: ${({border}) => border || '1px solid #ccc'};\r\n  background: #f6f6f6;\r\n  border-radius: 8px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 90px;\r\n  height: 28px;\r\n  border: 1px solid #ccc;\r\n  background: #fff;\r\n  color: #666;\r\n  border-radius: 5px;\r\n  box-shadow: inset 0 2px 2px #ccc;\r\n  background-color: lightgreen;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px #ccc;\r\n  }\r\n\r\n  &:active {\r\n    margin-top: 1px;\r\n    margin-bottom: -1px;\r\n    zoom: 1;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-family: 'Raleway', sans-serif;\r\n  color: red;\r\n  /* color: ${props => props.color || '#4d4d4d'} */\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {\r\n  Form,\r\n  FormLabel,\r\n  FormInput,\r\n  FormButton,\r\n  Text,\r\n} from './SignupFormStyledComponent';\r\n\r\nconst numberRegex = RegExp(/[0-9]{3}-[0-9]{2}-[0-9]{2}?$/);\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().min(2,\"The name must be longer than 2 characters\").max(20, \"The name must be max 20 characters\" )\r\n  .required(' Name is required'),\r\n  number: yup.string().matches(numberRegex, \"Invalid number\").required(\"Number is required\")\r\n})\r\n\r\nexport default class SignupForm extends Component {\r\n    static propTypes = {\r\n      onAddContact: PropTypes.func.isRequired,\r\n    };\r\n\r\n  render() {\r\n    return (\r\n      <Formik \r\n      initialValues={{ name: \"\", number: \"\" }}\r\n\r\n      validationSchema = {validationSchema}\r\n\r\n      onSubmit={(values, {resetForm})=> {\r\n        const {name, number} = values;\r\n        this.props.onAddContact({ id: uuidv4(), name, number });\r\n        resetForm()\r\n      }}\r\n      render={({\r\n        errors,\r\n        values,\r\n        handleChange,\r\n        handleSubmit\r\n      }) => (\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormLabel>\r\n          Name\r\n          {errors.name && <Text>{errors.name}</Text>}\r\n          <FormInput\r\n            border={errors.name && '1px solid red'}\r\n            type=\"text\"\r\n            value={values.name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            placeholder=\"Name*\"\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Number\r\n          {errors.number && <Text color= \"red\">{errors.number}</Text>}\r\n          <FormInput\r\n           border={errors.number && '1px solid red'}\r\n            type=\"string\"\r\n            value={values.number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            placeholder=\"111-11-11*\"\r\n          />\r\n        </FormLabel>\r\n        <FormButton type=\"submit\">Add contact</FormButton>\r\n      </Form>\r\n          )}\r\n          />\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterLabel = styled.label`\r\nfont-size: 18px;\r\n`\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FilterLabel} from './FilterStyledComponents'\r\n\r\nfunction Filter({ name, onChangeFilter }) {\r\n  return (\r\n    <>\r\n      <FilterLabel>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </FilterLabel>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func,\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\n\r\nimport Contacts from './Contacts';\r\nimport SignupForm from './SignupForm/SignupForm';\r\nimport Filter from './Filter';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = contact => {\r\n    this.setState(prevState => {\r\n      if (prevState.contacts.some(el => el.name === contact.name)) {\r\n        alert(`${contact.name} is already in contacts!`);\r\n        return;\r\n      }\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleButtonDelete = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(\r\n          contact => contact.id !== contactId,\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts,filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <section className=\"section\">\r\n        <h1>Phonebook</h1>\r\n        <SignupForm onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {contacts.length> 0 &&\r\n        <Filter name={filter} onChangeFilter={this.handleFilter} />\r\n      }\r\n        <Contacts\r\n          contacts={visibleContacts}\r\n          onDeleteContact={this.handleButtonDelete}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}